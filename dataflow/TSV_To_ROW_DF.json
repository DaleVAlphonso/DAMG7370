{
	"name": "TSV_To_ROW_DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText_NameBasic",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Generic_SNF",
						"type": "DatasetReference"
					},
					"name": "sinkNameBasic"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "flattenKnowForTitles"
				},
				{
					"name": "flattenPrimaryProfession"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JOB_ID as string",
				"}",
				"source(output(",
				"          nconst as string,",
				"          primaryName as string,",
				"          birthYear as short,",
				"          deathYear as short,",
				"          primaryProfession as string,",
				"          knownForTitles as string,",
				"          YearStatus_Flag as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(knownForTitles = split(knownForTitles, ','),",
				"          primaryProfession = split(primaryProfession, ','),",
				"          DI_JOB_ID = $JOB_ID,",
				"          DI_LOAD_DT = currentDate()) ~> derivedColumn1",
				"derivedColumn1 foldDown(unroll(knownForTitles),",
				"     mapColumn(",
				"          nconst,",
				"          primaryName,",
				"          birthYear,",
				"          deathYear,",
				"          primaryProfession,",
				"          knownForTitles",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenKnowForTitles",
				"flattenKnowForTitles foldDown(unroll(primaryProfession),",
				"     mapColumn(",
				"          nconst,",
				"          primaryName,",
				"          birthYear,",
				"          deathYear,",
				"          primaryProfession,",
				"          knownForTitles",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenPrimaryProfession",
				"flattenPrimaryProfession sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sinkNameBasic"
			]
		}
	}
}